version: '3.8'

services:
  service1:
    build:
      context: ./User Management Service
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    networks:
      - apisix

  service2:
    build:
      context: ./Student Enrolment Service
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    networks:
      - apisix

  service3:
    build:
      context: ./Course-Management-Service
      dockerfile: Dockerfile
    ports:
      - "5002:5002"
    networks:
      - apisix
  
  service4:
    build:
      context: ./Payment Service
      dockerfile: Dockerfile
    ports:
      - "5003:5003"
    networks:
      - apisix

  service5:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    ports:
      - "5004:5004"
    networks:
      - apisix

  apisix-dashboard:
    image: apache/apisix-dashboard:3.0.1-alpine
    restart: always
    volumes:
      - ./apisix-docker/example/dashboard_conf/conf.yaml:/usr/local/apisix-dashboard/conf/conf.yaml
    ports:
      - "9000:9000"
    networks:
      - apisix

  apisix:
    image: apache/apisix:${APISIX_IMAGE_TAG:-3.5.0-debian}
    restart: always
    volumes:
      - ./apisix-docker/example/apisix_conf/config.yaml:/usr/local/apisix/conf/config.yaml:ro
    depends_on:
      - etcd
    ports:
      - "9180:9180/tcp"
      - "9080:9080/tcp"
      - "9091:9091/tcp"
      - "9443:9443/tcp"
      - "9092:9092/tcp"
    networks:
      - apisix

  etcd:
    image: bitnami/etcd:3.4.15
    restart: always
    volumes:
      - etcd_data:/bitnami/etcd
    environment:
      ETCD_ENABLE_V2: "true"
      ALLOW_NONE_AUTHENTICATION: "yes"
      ETCD_ADVERTISE_CLIENT_URLS: "http://etcd:2379"
      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
    ports:
      - "2379:2379/tcp"
    networks:
      - apisix

  web1:
    image: nginx:1.19.0-alpine
    restart: always
    volumes:
      - ./apisix-docker/example/upstream/web1.conf:/etc/nginx/nginx.conf
    ports:
      - "9081:80/tcp"
    environment:
      - NGINX_PORT=80
    networks:
      - apisix

  web2:
    image: nginx:1.19.0-alpine
    restart: always
    volumes:
      - ./apisix-docker/example/upstream/web2.conf:/etc/nginx/nginx.conf
    ports:
      - "9082:80/tcp"
    environment:
      - NGINX_PORT=80
    networks:
      - apisix

  prometheus:
    image: prom/prometheus:v2.25.0
    restart: always
    volumes:
      - ./apisix-docker/example/prometheus_conf/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - apisix

networks:
  apisix:
    driver: bridge

volumes:
  etcd_data:
    driver: local
